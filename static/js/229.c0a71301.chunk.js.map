{"version":3,"file":"static/js/229.c0a71301.chunk.js","mappings":"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","sources":["components/TopBox/TopBox.styled.js","components/TopBox/TopBox.jsx","components/BottomBox/BottomBox.styled.js","components/BottomBox/BottomBox.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","pages/LogIn/LogIn.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport imgWrapper from '../../images/wrapper.jpg';\n\nexport const CoverBox = styled.section`\n  width: 500px;\n  margin: 0 auto 20px auto;\n  background-image: url(${imgWrapper});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  padding: 4rem 8rem;\n  border: 3px solid #333333;\n  font-size: 2.5rem;\n  border-radius: 2% 6% 5% 4% / 1% 1% 2% 4%;\n  text-transform: uppercase;\n  letter-spacing: 0.3ch;\n`;\n","import { CoverBox } from './TopBox.styled';\n\nconst TopBox = ({ children }) => {\n  return <CoverBox>{children}</CoverBox>;\n};\n\nexport default TopBox;\n","import styled from '@emotion/styled';\n\nexport const CoverBox = styled.section`\n  width: 500px;\n  margin: 0 auto;\n  background-color: #6ca1bb;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  padding: 4rem 3rem;\n  border: 3px solid #333333;\n  font-size: 2.5rem;\n  border-radius: 1% 1% 2% 4% / 2% 6% 5% 4%;\n  text-transform: uppercase;\n  letter-spacing: 0.3ch;\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n`;\n","import { CoverBox } from './BottomBox.styled';\n\nconst BottomBox = ({ children }) => {\n  return <CoverBox>{children}</CoverBox>;\n};\n\nexport default BottomBox;\n","import styled from '@emotion/styled';\nimport { ToastContainer } from 'react-toastify';\n\nexport const StyledContainer = styled(ToastContainer)`\n  font-size: 20px;\n  letter-spacing: 0.1ch;\n  text-transform: none;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  margin-bottom: 20px;\n  font-size: 46px;\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const PhoneForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  border-radius: 5px;\n`;\n\nexport const NameLabel = styled.label`\n  margin-bottom: 10px;\n  font-size: 15px;\n  line-height: 1.17;\n  text-align: start;\n`;\nexport const NumberLabel = styled.label`\n  margin-bottom: 10px;\n  font-size: 15px;\n  line-height: 1.17;\n  text-align: start;\n`;\n\nexport const InputNameField = styled.input`\n  padding-left: 0 0 0 10px;\n  margin-bottom: 30px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  font-size: 18px;\n  border-radius: 12px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\nexport const InputNumberField = styled.input`\n  padding-left: 0 0 0 10px;\n  margin-bottom: 30px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  border-radius: 12px;\n  font-size: 18px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\nexport const FormButton = styled.button`\n  margin: 0 auto;\n  width: 40%;\n  height: 40px;\n  border-radius: 7px;\n  font-family: inherit;\n  text-transform: uppercase;\n  background: #c5dde8;\n  border: 1px solid #000000;\n  border-radius: 12px;\n  color: #000000;\n  line-height: 1.17;\n  letter-spacing: 0.3ch;\n  font-size: 15px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    letter-spacing 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    color: grey;\n    background-color: #eecfba;\n    letter-spacing: 0.2ch;\n  }\n`;\n","import { useState } from 'react';\nimport { FaFeather } from 'react-icons/fa';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiPhoneOutline } from 'react-icons/ti';\nimport { getContacts, getIsLoading } from '../../redux/contactSlice';\nimport { addNewContact } from '../../redux/operations';\nimport { notifyErrorIfNewContactAlreadyExists } from '../../notificationMessages/notificationMessages';\nimport {\n  Title,\n  PhoneForm,\n  NameLabel,\n  InputNameField,\n  NumberLabel,\n  InputNumberField,\n  FormButton,\n  StyledContainer,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const addedContacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleInput = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    const checkIfNewContactAlreadyExists = addedContacts.find(\n      ({ name }) => name.toLowerCase() === contactToAdd.name.toLowerCase()\n    );\n\n    if (checkIfNewContactAlreadyExists) {\n      notifyErrorIfNewContactAlreadyExists(contactToAdd.name);\n    } else {\n      dispatch(addNewContact(contactToAdd));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <PhoneForm onSubmit={handleSubmit}>\n      <StyledContainer />\n      <Title>\n        <TiPhoneOutline size={50} /> Phonebook\n      </Title>\n      <NameLabel htmlFor={nameInputId}>Name</NameLabel>\n      <InputNameField\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleInput}\n        required\n      />\n      <NumberLabel htmlFor={numberInputId}>Number</NumberLabel>\n      <InputNumberField\n        id={numberInputId}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleInput}\n        required\n      />\n      <FormButton type=\"submit\" disabled={isLoading}>\n        <FaFeather style={{ marginRight: '5px' }} />\n        <span>Add contact</span>\n      </FormButton>\n    </PhoneForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\nimport { ToastContainer } from 'react-toastify';\n\nexport const StyledContainer = styled(ToastContainer)`\n  font-size: 20px;\n  letter-spacing: 0.1ch;\n  text-transform: none;\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalCloseButton = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #e9eff6;\n  border-radius: 50%;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    letter-spacing 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    color: grey;\n    background-color: #eecfba;\n    letter-spacing: 0.1ch;\n  }\n`;\n\nexport const WrapperLeft = styled.div`\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background: #ffffff;\n  border-radius: 20px;\n  bottom: 60px;\n  left: -30px;\n  &:after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n    top: 20px;\n    left: 10px;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n\n    top: -20px;\n  }\n`;\n\nexport const WrapperRight = styled.div`\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background: #ffffff;\n  border-radius: 20px;\n  top: 60px;\n  right: -30px;\n  &:after {\n    top: 20px;\n    right: 10px;\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n  }\n  &:before {\n    top: -20px;\n    right: 0;\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { IoCloseSharp } from 'react-icons/io5';\nimport { getContacts } from '../../redux/contactSlice';\nimport { editContact } from '../../redux/operations';\nimport { notifyErrorIfNewContactAlreadyExists } from '../../../src/notificationMessages/notificationMessages';\nimport {\n  Overlay,\n  ModalCloseButton,\n  WrapperLeft,\n  WrapperRight,\n} from '../Modal/Modal.styled';\nimport {\n  Form,\n  WrapperCircle,\n  FormContent,\n  FormTitle,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from '../../pages/LogIn/LogIn.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onModalClose, dataContact }) => {\n  const dispatch = useDispatch();\n  const addedContacts = useSelector(getContacts);\n  document.body.style.overflow = 'hidden';\n\n  const [name, setName] = useState(dataContact.name);\n  const [number, setNumber] = useState(dataContact.number);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onModalClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleInput = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onModalClose();\n    }\n  };\n\n  const handleEditContactFormSubmit = e => {\n    e.preventDefault();\n    const contactToEdit = {\n      id: dataContact.id,\n      name,\n      number,\n    };\n\n    const editedContactAlreadyExists = addedContacts.find(\n      ({ name, id }) =>\n        name.toLowerCase() === contactToEdit.name.toLowerCase() &&\n        contactToEdit.id !== id\n    );\n\n    const contactIsNotEdited = addedContacts.find(\n      ({ name, id, number }) =>\n        name.toLowerCase() === contactToEdit.name.toLowerCase() &&\n        contactToEdit.id === id &&\n        number.trim() === contactToEdit.number.trim()\n    );\n\n    if (editedContactAlreadyExists) {\n      notifyErrorIfNewContactAlreadyExists(contactToEdit.name);\n    } else if (contactIsNotEdited) {\n      onModalClose();\n    } else {\n      dispatch(editContact(contactToEdit));\n    }\n\n    document.body.style.overflow = '';\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <Form onSubmit={handleEditContactFormSubmit}>\n        <ModalCloseButton type=\"button\" onClick={onModalClose}>\n          <IoCloseSharp size={40} />\n        </ModalCloseButton>\n        <WrapperLeft></WrapperLeft>\n        <WrapperRight></WrapperRight>\n        <WrapperCircle></WrapperCircle>\n        <FormContent>\n          <FormTitle>Edit the contact</FormTitle>\n          <FormLabel htmlFor={nameInputId}>Name</FormLabel>\n          <FormInput\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormLabel htmlFor={numberInputId}>Number</FormLabel>\n          <FormInput\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormButton type=\"submit\">Ok</FormButton>\n        </FormContent>\n      </Form>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onModalClose: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactSimpleItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-align: start;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.17;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const NameInfo = styled.span`\n  font-style: italic;\n  font-size: 25px;\n  letter-spacing: 0.1ch;\n`;\n\nexport const NumberInfo = styled.span`\n  font-size: 20px;\n  letter-spacing: 0.1ch;\n`;\n\nexport const ContactButton = styled.button`\n  padding: 7px 12px;\n  min-height: 25px;\n  flex-shrink: 0;\n  font-family: inherit;\n  text-transform: uppercase;\n  line-height: 1.17;\n  letter-spacing: 0.1ch;\n  background: #c5dde8;\n  border-bottom: 2px solid gray;\n  color: #000000;\n  font-size: 16px;\n  border-radius: 12px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    letter-spacing 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    color: grey;\n    background-color: #eecfba;\n    letter-spacing: 0.1ch;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiContacts } from 'react-icons/ti';\nimport { notifySuccessDeletedInfo } from '../../../src/notificationMessages/notificationMessages';\nimport { getIsLoading } from '../../redux/contactSlice';\nimport { removeContact } from '../../redux/operations';\nimport { Modal } from '../Modal/Modal';\nimport {\n  ContactSimpleItem,\n  NameInfo,\n  NumberInfo,\n  ContactButton,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const isLoading = useSelector(getIsLoading);\n\n  const onDeleteContactHandler = () => {\n    try {\n      dispatch(removeContact(item.id));\n      notifySuccessDeletedInfo(item.name);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onEditButtonHandlerClick = e => {\n    e.preventDefault();\n    setIsOpenModal(true);\n  };\n\n  const onModalClose = async () => {\n    setIsOpenModal(false);\n    document.body.style.overflow = '';\n  };\n\n  return (\n    <>\n      <ContactSimpleItem>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <TiContacts size={30} style={{ marginRight: '10px' }} />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <NameInfo>{item.name}: </NameInfo>\n            <NumberInfo>{item.number}</NumberInfo>\n          </div>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <ContactButton\n            type=\"button\"\n            style={{ marginRight: '7px' }}\n            onClick={onEditButtonHandlerClick}\n          >\n            Edit\n          </ContactButton>\n          <ContactButton\n            type=\"button\"\n            disabled={isLoading}\n            onClick={onDeleteContactHandler}\n          >\n            {isLoading ? 'Deleting' : 'Delete'}\n          </ContactButton>\n        </div>\n      </ContactSimpleItem>\n      {isOpenModal && <Modal onModalClose={onModalClose} dataContact={item} />}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape(\n    {\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }.isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport { Loader } from '../Spinner/Spinner.styled';\n\nexport const Spinner = () => {\n  return (\n    <Loader>\n      <FallingLines\n        color=\"#000\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Loader>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const NoMatchesSectionTitle = styled.h2`\n  letter-spacing: normal;\n  text-transform: none;\n  font-size: 25px;\n  margin-bottom: 10px;\n`;\n","import { useSelector } from 'react-redux';\nimport { getContacts, getIsLoading } from '../../redux/contactSlice';\nimport { getFilterValue } from '../../redux/filterSlice';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Spinner } from '../Spinner/Spinner';\nimport noMatchesImg from '../../images/noMatches.png';\nimport { NoMatchesSectionTitle } from '../ContactList/ContactList.styled';\n\nconst ContactList = () => {\n  const addedContacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const enteredFilterValue = useSelector(getFilterValue);\n\n  const normalizeFilter = enteredFilterValue.toLowerCase();\n  const visibleContacts = addedContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter)\n  );\n  const noMatches = visibleContacts.length === 0;\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <ul>\n          {visibleContacts.map(contact => (\n            <ContactItem key={contact.id} item={contact} />\n          ))}\n        </ul>\n      )}\n      {noMatches && (\n        <div>\n          <NoMatchesSectionTitle>Ooops... No matches!</NoMatchesSectionTitle>\n          <img src={noMatchesImg} alt=\"Error\" width={100} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  margin: 0 auto 20px auto;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n  line-height: 1.17;\n`;\n\nexport const InputFilterField = styled.input`\n  padding-left: 0 0 0 10px;\n  margin-bottom: 20px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  border-radius: 15px;\n  font-size: 18px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport { FilterWrapper, FilterLabel, InputFilterField } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterInputId = nanoid();\n\n  const filterHandler = e => {\n    e.preventDefault();\n    dispatch(setFilter(e.currentTarget.value.trim()));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor={filterInputId}>Find contacts by name</FilterLabel>\n      <InputFilterField\n        id={filterInputId}\n        onChange={filterHandler}\n        type=\"text\"\n        name=\"filter\"\n        title=\"Filter by name\"\n      />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const MainWrapper = styled.main`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  margin: 0 auto;\n  padding: 20px 0 20px 0;\n`;\nexport const ContactsTitle = styled.h2`\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\nexport const Layout = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(45deg, #eecfba, #c5dde8);\n`;\n\nexport const NoContactsSectionTitle = styled.h2`\n  letter-spacing: 0.1ch;\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const ErrorSectionTitle = styled.h2`\n  letter-spacing: 0.1ch;\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const ErrorSectionText = styled.p`\n  letter-spacing: 0.1ch;\n  font-size: 25px;\n  margin-bottom: 10px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getIsLoading, getError } from '../../redux/contactSlice';\nimport { fetchContacts } from '../../redux/operations';\nimport TopBox from '../../components/TopBox/TopBox';\nimport BottomBox from '../../components/BottomBox/BottomBox';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport errorImg from '../../images/error.png';\nimport emptyPhonebookImg from '../../images/no_contacts.png';\nimport {\n  MainWrapper,\n  ContactsTitle,\n  Layout,\n  NoContactsSectionTitle,\n  ErrorSectionTitle,\n  ErrorSectionText,\n} from './Contacts.styled';\n\nconst Contacts = () => {\n  const addedContacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isNotContactListEmpty = addedContacts.length > 0;\n  return (\n    <>\n      <main>\n        <Layout>\n          <MainWrapper>\n            <TopBox>\n              <ContactForm />\n            </TopBox>\n            {isNotContactListEmpty && (\n              <BottomBox>\n                <div>\n                  <ContactsTitle>Contacts</ContactsTitle>\n                  <Filter />\n                  <ContactList />\n                </div>\n              </BottomBox>\n            )}\n            {!isNotContactListEmpty && !isLoading && (\n              <BottomBox>\n                <div>\n                  <NoContactsSectionTitle>\n                    No contacts yet!\n                  </NoContactsSectionTitle>\n                  <img src={emptyPhonebookImg} alt=\"No contacts\" width={100} />\n                </div>\n              </BottomBox>\n            )}\n            {isError && !isLoading && (\n              <BottomBox>\n                <div>\n                  <ErrorSectionTitle>\n                    Sorry, something went wrong!\n                  </ErrorSectionTitle>\n                  <ErrorSectionText style={{ marginBottom: '10px' }}>\n                    Error loading the contacts\n                  </ErrorSectionText>\n                  <img src={errorImg} alt=\"Error\" width={100} />\n                </div>\n              </BottomBox>\n            )}\n          </MainWrapper>\n        </Layout>\n      </main>\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\nimport Feathers from '../../images/feathers.png';\nimport HeaderLogo from '../../images/feather_logo.png';\n\nexport const Layout = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: #c5dde8;\n  background-image: url(${Feathers});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  width: 500px;\n  margin: 50px auto 0;\n  background: white;\n  border-radius: 30px;\n  letter-spacing: 0.3ch;\n  text-transform: uppercase;\n  &:hover {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12),\n      0px 4px 10px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const WrapperLeft = styled.div`\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background: #c5dde8;\n  border-radius: 20px;\n  bottom: 60px;\n  left: -30px;\n  &:after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n    top: 20px;\n    left: 10px;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n\n    top: -20px;\n  }\n`;\n\nexport const WrapperRight = styled.div`\n  content: '';\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background: #c5dde8;\n  border-radius: 20px;\n  top: 60px;\n  right: -30px;\n  &:after {\n    top: 20px;\n    right: 10px;\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n  }\n  &:before {\n    top: -20px;\n    right: 0;\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: 30px;\n    background: white;\n  }\n`;\nexport const WrapperCircle = styled.div`\n  position: absolute;\n  bottom: 80px;\n  left: -55px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: white;\n`;\n\nexport const FormContent = styled.div`\n  padding: 50px;\n`;\n\nexport const FormTitle = styled.h3`\n  width: 100%;\n  font-weight: 500;\n  font-size: 24px;\n  color: #000000;\n  margin-bottom: 20px;\n`;\nexport const FormLabel = styled.label`\n  color: #000000;\n  display: block;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 100%;\n  padding-left: 0 0 0 10px;\n  margin-bottom: 20px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  font-size: 18px;\n  border-radius: 12px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\nexport const FormPasswordInput = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 40px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  border-radius: 12px;\n  font-family: 'Roboto', sans-serif;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\nexport const FormButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  width: 40%;\n  height: 40px;\n  margin: 0 auto;\n  font-family: inherit;\n  letter-spacing: 0.3ch;\n  text-transform: uppercase;\n  /* background: #c5dde8; */\n  background: #6ca1bb;\n  border-bottom: 2px solid gray;\n  color: #000000;\n  font-size: 18px;\n  border-radius: 12px;\n  /* background-image: url(${HeaderLogo});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain; */\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    letter-spacing 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    color: grey;\n    background-color: #eecfba;\n    letter-spacing: 0.1ch;\n  }\n`;\n"],"names":["CoverBox","styled","imgWrapper","children","StyledContainer","ToastContainer","Title","PhoneForm","NameLabel","NumberLabel","InputNameField","InputNumberField","FormButton","dispatch","useDispatch","addedContacts","useSelector","getContacts","isLoading","getIsLoading","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleInput","e","target","value","reset","onSubmit","preventDefault","contactToAdd","find","toLowerCase","notifyErrorIfNewContactAlreadyExists","addNewContact","size","htmlFor","id","type","pattern","title","onChange","required","disabled","style","marginRight","Overlay","ModalCloseButton","WrapperLeft","WrapperRight","modalRoot","document","querySelector","Modal","onModalClose","dataContact","body","overflow","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","contactToEdit","editedContactAlreadyExists","contactIsNotEdited","trim","editContact","ContactSimpleItem","NameInfo","NumberInfo","ContactButton","ContactItem","item","isOpenModal","setIsOpenModal","display","alignItems","flexDirection","removeContact","notifySuccessDeletedInfo","error","console","log","Loader","Spinner","color","width","visible","ariaLabel","NoMatchesSectionTitle","normalizeFilter","getFilterValue","visibleContacts","filter","includes","noMatches","length","map","contact","src","noMatchesImg","alt","FilterWrapper","FilterLabel","InputFilterField","filterInputId","setFilter","MainWrapper","ContactsTitle","Layout","NoContactsSectionTitle","ErrorSectionTitle","ErrorSectionText","isError","getError","fetchContacts","isNotContactListEmpty","emptyPhonebookImg","marginBottom","errorImg","Feathers","Form","WrapperCircle","FormContent","FormTitle","FormLabel","FormInput","FormPasswordInput","HeaderLogo"],"sourceRoot":""}